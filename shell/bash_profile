#!/bin/bash

# bash_profile

# set 256 color profile where possible
if [[ $COLORTERM == gnome-* && $TERM == xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
    export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
    export TERM=xterm-256color
fi

# Up-front dotfiles configuration
# Not part of `load_dotfiles` because it must be sourced before anything else
# to be sure that commands like `brew` (when installed in a custom location)
# are already added to the PATH.
[ -r $HOME/.dotfilesrc ] && source $HOME/.dotfilesrc;

#
# Load a given dotmodule
load_dotmod() {
    local MODNAME=$1
    local MODLOADER=$DOT_MODS_ACTIVE/$MODNAME/${MODNAME}_load.sh
    #
    if [ ! -f $MODLOADER ]; then
	e_error ">>> ERROR: $MODNAME is not a valid module"
	return
    fi
    source $MODLOADER
}

load_dotfiles() {
    local DF=$HOME/.dotfiles
    declare -a files=(
	$DF/lib/utils
        $HOME/.rvm/scripts/rvm # Load RVM into a shell session *as a function*
        $DF/shell/bash_options # Options
        $DF/shell/bash_exports # Exports
        $DF/shell/bash_aliases # Aliases
        $DF/shell/functions/* # Functions
        $DF/shell/bash_prompt # Custom bash prompt
        $DF/shell/bash_paths # Path modifications
        $(brew --prefix)/etc/bash_completion # Bash completion (installed via Homebrew)
        $HOME/.bash_profile.local # Local and private settings not under version control (e.g. git credentials)
    )

    # if these files are readable, source them
    for index in ${!files[*]}
    do
        if [[ -r ${files[$index]} ]]; then
            source ${files[$index]}
        fi
    done

    # load all enabled shell modules
    for mod in $DOT_MODS_ACTIVE/*; do
	if [ -d $mod ]; then
	    local modname=$(basename $mod)
	    load_dotmod $modname
	fi
    done
}

# Anaconda
. $HOME/anaconda3/etc/profile.d/conda.sh

load_dotfiles
unset load_dotfiles
unset load_dotmod


test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"
